---

#################################################
# General parameters                            #
#################################################

# Location where configuration files will be stored
config_dir: '~/homelab-dns'

#################################################
# BIND9 DNS server options                      #
#################################################

# Subnets that are allowed to use the resolver
# comma separated list of IP addresses, IP addresses with CIDR mask, or address match list names "none", "any", "localhost", and "localnets"
allowed_clients: "192.168.1.0/24,127.0.0.1"

# DNS entries for the bind9 server in your private zone
# These will be translated into A and PTR records
dns_zone: "home.example.com"
hosts:
  - name: "server1" # will resolve "server1.home.example.com" to 192.168.1.11
    addr: "192.168.1.11"
  - name: "server2"
    addr: "192.168.1.12"
  - name: "*.server2" # wildcard will resolve all subdomains of "server2.home.example.com" to 192.168.1.12
    addr: "192.168.1.12"

# (optional) Additional A records outside of your private zone
additional_a_records:
  - somewhere.else.net=0.0.0.0
  # real-world example: use BedrockConnect to connect to to any Minecraft Bedrock Server from your game console(s)
  # details and documentation here: https://github.com/Pugmatt/BedrockConnect
  - geo.hivebedrock.network=104.238.130.180
  - hivebedrock.network=104.238.130.180
  - mco.mineplex.com=104.238.130.180
  - play.inpvp.net=104.238.130.180
  - mco.lbsg.net=104.238.130.180
  - play.galaxite.net=104.238.130.180
  - play.pixelparadise.gg=104.238.130.180

# (optional) CNAME records
cname_records:
  - some.external.domain=internal.home.example.com

#################################################
# Pi-hole options                               #
#################################################

# Block forwarding of requests in the private zone to public servers
# Sometimes, e.g. due to typos, it can happen that a requested FQDN isn't resolved by the bind9 server.
# Not forwarding them to the outside world improves your privacy.
block_private_requests_to_public_servers: true

#################################################
# Configure webinterfaces                       #
#################################################

# Activate webinterfaces
# Setting this to false will cause the code to ignore everything else in this section.
activate_webinterfaces: true

# The logging level for traefik, default is ERROR.
# Alternative logging levels are DEBUG, INFO, WARN, ERROR, FATAL, and PANIC.
traefik_log_level: "ERROR"

# Whether to use HTTPS instead of HTTP
activate_https: true

# To get certificates, traefik needs additional configuration. This will take some time after startup!
# This is an example of parameters to request SSL certs from Let's Encrypt using the DNS-01 challenge with the Cloudflare provider:
additional_traefik_environment_vars:
  - name: "CF_API_EMAIL"
    value: "cloudflare-user@example.com"
  - name: "CLOUDFLARE_DNS_API_TOKEN"
    value: "YOUR-DNS-API-TOKEN"
additional_traefik_cli_params:
  # use the letsencrypt staging endpoint for testing
  - "--certificatesresolvers.certresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
  # prod endpoint for when all is tested
  #- "--certificatesresolvers.certresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
  - "--certificatesresolvers.certresolver.acme.email=webmaster@example.com"
  - "--certificatesresolvers.certresolver.acme.dnschallenge=true"
  - "--certificatesresolvers.certresolver.acme.dnschallenge.provider=cloudflare"
  # to connect to cloudflare DNS directly when verifying the DNS challenge, as to not be blocked by our Pi-hole block rule
  - "--certificatesresolvers.certresolver.acme.dnschallenge.resolvers=1.1.1.1:53"

# Activate the traefik API and Dashboard (on 'traefik'-subdomain, e.g. traefik.ns.home.example.com)
activate_traefik_dashboard: true

# Set the username and password for traefik, leave empty to not require authentication
# Never commit your actual password to any repository!
# If you make the web ports 80 and/or 443 available from the internet do not leave this blank!
traefik_user: ""
traefik_password: ""

# Serve DNS record list (served at the host FQDN, e.g. ns.home.example.com)
# A small webserver with a list of all DNS entries that were configured in the BIND9 section
activate_record_list_service: true

# Activate the Pi-hole web GUI (on 'pihole'-subdomain, e.g. pihole.ns.home.example.com)
activate_pihole_webgui: true

# Set the Pi-hole web GUI password, leave empty for a randomly generated one
# Never commit your actual password to any repository!
# The random password can be fetched from the container log!
pihole_webgui_password: ""
